name: Build packages and release

on: push

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: valheim-server
      run: |
        dpkg-deb --build valheim-server
        version=$(grep Version valheim-server/DEBIAN/control | awk -e '{print $2}')
        valheim_server_path=valheim-server_$version_x64.deb
        echo "VALHEIM_SERVER_PATH=$valheim_server_path" >> $GITHUB_ENV
        mv valheim-server.deb $valheim_server_path
    - name: valheim-server-artifact
      uses: actions/upload-artifact@v2
      with:
        name: valheim-server
        path: ${{ env.VALHEIM_SERVER_PATH }}
    - name: valheim-server-plus
      run: |
        dpkg-deb --build valheim-server-plus
        version=$(grep Version valheim-server-plus/DEBIAN/control | awk -e '{print $2}')
        valheim_server_plus_path=valheim-server-plus_$version_x64.deb
        echo "VALHEIM_SERVER_PLUS_PATH=$valheim_server_plus_path" >> $GITHUB_ENV
        mv valheim-server-plus.deb $valheim_server_plus_path
    - name: valheim-server-plus-artifact
      uses: actions/upload-artifact@v2
      with:
        name: valheim-server-plus
        path: ${{ env.VALHEIM_SERVER_PLUS_PATH }}
  release:
    needs: build
    runs-on: ubuntu-latest
    # if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v2
    - name: init
      run: |      
        sudo apt-get install aptly
        version=$(grep Version valheim-server/DEBIAN/control | awk -e '{print $2}')
        valheim_server_path=valheim-server_$version_x64.deb
        echo "VALHEIM_SERVER_PATH=$valheim_server_path" >> $GITHUB_ENV
        version=$(grep Version valheim-server-plus/DEBIAN/control | awk -e '{print $2}')
        valheim_server_plus_path=valheim-server-plus_$version_x64.deb
        echo "VALHEIM_SERVER_PLUS_PATH=$valheim_server_plus_path" >> $GITHUB_ENV
    - name: download valheim-server-artifact
      uses: actions/download-artifact@v2
      with:
        name: valheim-server
    - name: download valheim-server-plus-artifact
      uses: actions/download-artifact@v2
      with:
        name: valheim-server-plus
    - name: export version
      run: |
        VER=$(cat VERSION)
        echo "current version $VER"
        VER=$(echo $VER | perl -pe 's/^((\d+\.)*)(\d+)(.*)$/$1.($3+1).$4/e')
        echo "new version $VER"
        echo $VER > VERSION
        echo "VERSION=$VER" >> $GITHUB_ENV
    # - name: Create Release
    #   id: create_release
    #   uses: actions/create-release@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     tag_name: ${{ env.VERSION }}
    #     release_name: Release ${{ env.VERSION }}
    #     body: Release
    #     draft: false
    #     prerelease: false
    # - name: upload valheim-server to release
    #   uses: svenstaro/upload-release-action@v2
    #   with:
    #     repo_token: ${{ secrets.GITHUB_TOKEN }}
    #     file: ${{ env.VALHEIM_SERVER_PATH }}
    #     asset_name: ${{ env.VALHEIM_SERVER_PATH }}
    #     tag: ${{ env.VERSION }}
    #     overwrite: true
    #     body: "Release"
    # - name: upload valheim-server-plus to release
    #   uses: svenstaro/upload-release-action@v2
    #   with:
    #     repo_token: ${{ secrets.GITHUB_TOKEN }}
    #     file: ${{ env.VALHEIM_SERVER_PLUS_PATH }}
    #     asset_name: ${{ env.VALHEIM_SERVER_PLUS_PATH }}
    #     tag: ${{ env.VERSION }}
    #     overwrite: true
    #     body: "Release"
    - name: upload to apt repo
      run: |
        echo "Importing secret key"
        echo ${{ secrets.GPG_PRIVATE_KEY }} | gpg1 --import

        echo "Importing public key"
        gpg --no-default-keyring --keyring trustedkeys.gpg --import key.gpg

        cp .aptly.conf /home/runner/

        echo "loading remote repo"
        aptly mirror create remote https://apt.facinating.tech/ debian
        aptly mirror update remote

        echo "creating local repo"
        aptly repo create local

        echo "importing remote repo to local"
        aptly repo import remote local *
        aptly repo add local ${{ env.VALHEIM_SERVER_PATH }}
        aptly repo add local ${{ env.VALHEIM_SERVER_PLUS_PATH }}

        echo "publishing"
        aptly publish repo \
          -distribution="debian" \
          -passphrase=${{ secrets.GPG_PASSPHRASE }}
          local s3:apt.facinating.tech:
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}